* What's the magnitude of circuit gates that a normal program has when compiled by ZK VM?
* What's the use of representing identity permutations as degree-1 polynomials in plonk paper p26? Why must we add a multiplicative factor to the right and output elements?
* How does revocation in GPG work? It the revocation certificate a special signature (like signing the message "THIS PUBLIC KEY IS LOST, DON'T USE IT ANY MORE", how do we avoid this payload collides with normal payload) created at an eariler time which is generally agreed that if it is published then anyone should not trust the public key anymore?
* How does key aggregation for Schnorr signature works? [[https://eprint.iacr.org/2018/068][Simple Schnorr Multi-Signatures with Applications to Bitcoin]]. Schnorr signature is not automatically homomorphic, i.e. let \( (pk_1, s_1, m_1) \) and \( (pk_2, s_2, m_2) \) be two valid signature, how can we construct a third signature \( (pk_3, s_3, m_3) \) (a sensible choice of \( pk_3 \) can be \( pk_1 + pk_2 \), and \( m_1, m_2, m_3 \) may be identical) which can be verified by normal Schnorr signature verification procedure.
* Why do we require Schnorr signature in [[https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki][bips/bip-0341.mediawiki at master · bitcoin/bips]]?
* In [[https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki][bips/bip-0341.mediawiki at master · bitcoin/bips]], the output key \( P_2 \) (tweaked from internal key \( P \)) is obtained by setting \( P_2 = P + H(P \parallel h) \) where \( H \)