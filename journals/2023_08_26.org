* What is the best way to pass some tcp substream to another program? Imagine that we somehow punched a hole to another node, we now open a yamux substream in that tcp connection and we want to pass a substream to another program. How do we do that? [[system programming]]
Here is what go-libp2p-daemon did. In [[https://github.com/libp2p/go-libp2p-daemon/blob/84bdf7a077b9a44149e4ce17a67879751b12876a/test/integration_test.go#L79-L127][go-libp2p-daemon/test/integration_test.go at 84bdf7a077b9a44149e4ce17a67879751b12876a · libp2p/go-libp2p-daemon · GitHub]], the client open a unix domain socket to the server, it calls the gRPC method ~NewStream~ to open a substream. From then on, the unix domain socket is just a pipe for the substream. Is this a good practice? Can we create a new file descriptor from the old tcp fd, and pass it with the message passing interfaces of the kernel?