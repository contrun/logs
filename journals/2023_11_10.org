* Vulnerability and mitigation for eclipse attacks in bitcoin. [[eclipse attacks]] [[bitcoin]]
** Attacks can be initiated round by round (the same attacker can try repeatedly until it successfully initiate an successful attack). This is mitigated by a deterministic random function to select new peers to evict.
** Attacker can prolong the attack time and increase the success rate.
** Bitcoin let bad address occupy the ~new~ table, thus a malicious user may flood innocent nodes with unroutable addresses, whence only nodes controlled by adversary are connected.
** Bitcoin made it possible for replacing
* Questions on the susceptibility of eclipse attacks to DHT and gossip based p2p network.
** How do we compare the susceptibility of DHT network with gossip based network?
** Are attacks existing in the literature fixed by state of art DHT networks?
** What eclipse attack hardening feature are implemented in current DHT networks, e.g. TOR and Ethereum?
** What does "因为选择 peer 时会有一些倾向性且容易被别人预测" mean?
It seems that this means when peers tends to connect more peers with the shorter distance.
* Pluggable network modules in ckb.
** Different p2p networks may provide different functionality. Do we want to use libp2p's pubsub or just establish connection through it (just like TOR).
** Currently ckb is not completely transport agnostic in the sense
*** It is tentacle that has the functionality to obtain peer addresses to connect and manage connections (not ckb).
*** We are not connecting peers with the underlying TCP connection directly. We connect to them with secio. For example, we need to implement secio over TOR. Is that easy?
*** Can we run our gossip/rpc protocols over any connection, i.e. can make a library out of this gossip/rpc code base?