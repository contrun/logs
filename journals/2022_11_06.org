* Naive way to do Reed-Solomon proximity testing? [[zk-STARK]] 
Let \(\mathbb{F}\) be a finite field, \( S \subset \mathbb{F} \) be a subset of \(N\) elements, \( \rho \in (0, 1] \) be a constant, then denote \( RS(\mathbb{F}, S, \rho) \) the space of functions that are evaluations of polynomial of degree \(d < \rho N\). The Reed-Solomon proximity problem assumes a verifier has oracle access to \(f : S \to \mathbb{F} \), and asks that verifier to distinguish, with “large” confidence and “small” query complexity, between the case that f is a codeword of \( RS[\mathbb{F}, S, \rho] \) and the case that \(f\) is \(\delta\)-far in relative Hamming distance from all codewords.
A navie way to solve the Reed-Solomon proximity problem would ask the oracle to evaluate at \( d+1 \) points, if any of the \( C_{d+1}^{d} \) (we only need two tests?) interpolations are equal, then pass the testing.
See also [[https://sites.math.rutgers.edu/~sk1233/courses/topics-S17/lec10.pdf][Lecture 10: Low degree testing]]