* Mapping High Level Constructs to LLVM IR: Will simple casting from subclass to superclass work in multiple inheritance? [[compiling techniques]]
:PROPERTIES:
:id: 62f86517-4433-4a29-9d2b-af0a0a38fbec
:END:
#+BEGIN_SRC
%BaseA = type {
    i32         ; '_a' from BaseA
}
define void @BaseA_SetA(%BaseA* %this, i32 %value) nounwind {
    %1 = getelementptr %BaseA, %BaseA* %this, i32 0, i32 0
    store i32 %value, i32* %1
    ret void
}
* %BaseB = type {
    i32,        ; '_a' from BaseA
    i32         ; '_b' from BaseB
}
define void @BaseB_SetB(%BaseB* %this, i32 %value) nounwind {
    %1 = bitcast %BaseB* %this to %BaseA*
    call void @BaseA_SetA(%BaseA* %1, i32 %value)
    %2 = getelementptr %BaseB, %BaseB* %this, i32 0, i32 1
    store i32 %value, i32* %2
    ret void
}
* %Derived = type {
    i32,        ; '_a' from BaseA
    i32,        ; '_a' from BaseB
    i32,        ; '_b' from BaseB
    i32         ; '_c' from Derived
}
define void @Derived_SetC(%Derived* %this, i32 %value) nounwind {
    %1 = bitcast %Derived* %this to %BaseB*
    call void @BaseB_SetB(%BaseB* %1, i32 %value)
    %2 = getelementptr %Derived, %Derived* %this, i32 0, i32 2
    store i32 %value, i32* %2
    ret void
}
#+END_SRC
~%1 = bitcast %Derived* %this to %BaseB*~ shouldn't be working as the memory layouts of ~%Derived~ and ~%BaseB~ are different.