* Libp2p Decentralized Hole Punching [[hole punching]]
** Documentation
*** [[https://docs.libp2p.io/concepts/nat/hole-punching/#what-if-we-could-use-node-r-to-help-facilitate-a-direct-connection-between-node-a-and-node-b][Hole Punching - libp2p]]
*** [[https://research.protocol.ai/publications/decentralized-hole-punching/][Decentralized Hole Punching | Protocol Labs Research]]
** Implementation
*** [Project Flare(decentralised Hole Punching) Phase1 Meta Issue 路 Issue #1039 路 libp2p/go-libp2p](https://github.com/libp2p/go-libp2p/issues/1039)
** Follow-up
*** [[https://github.com/libp2p/test-plans/issues/126][add tests for hole punching 路 Issue #126 路 libp2p/test-plans]]
** Preliminary Results
*** 45 volunteers
*** 86% success rate for tcp
*** 93% success rate for quic
** Libp2p Protocols
*** Identify protocol
Find out the public ip and port
*** AutoNAT protocol
Request to dial a lot of public addresses
*** Circuit v2 protocol
Relay traffic through public nodes (limited time and traffic)
*** Hole punch coordination
Coordinate the whole connection. Send messages (like list of discovered addresses) through the relay. Try to connect to each other. Do connection reversal. Finally try to use relay server as the last resort.
** Transport protocols
*** TCP: simultaneous open
*** Quic: responding with random packet